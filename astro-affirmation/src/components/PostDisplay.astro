---
import background from "../assets/background.svg";
import MoveLeft from "@lucide/astro/icons/move-left";
import MoveRight from "@lucide/astro/icons/move-right";
import Dices from "@lucide/astro/icons/dices";

interface Props {
  post: any;
  postsCount: number;
}

const { post, postsCount } = Astro.props;
const current = Number(post.slug);
const next = isNaN(current) ? 1 : current + 1 > postsCount ? 1 : current + 1;
const previous = isNaN(current)
  ? postsCount
  : current - 1 < 1
    ? postsCount
    : current - 1;
---

<div class="page-container">
  <div class="content" id="content">
    <img id="background" src={background.src} alt="" fetchpriority="high" />
    <h1 id="title">{post.slug}. {post.data.title}</h1>
    <div id="post-content" set:html={post.rendered.html} />
    <div class="button-row">
      <a href={`/${previous}`}
        ><button class="button-blue"><MoveLeft class="icon" /></button></a
      >
      <a id="random-btn"
        ><button class="button-blue"><Dices class="icon" /></button></a
      >
      <a href={`/${next}`}
        ><button class="button-blue"><MoveRight class="icon" /></button></a
      >
    </div>
  </div>
</div>

<script define:vars={{ next, previous, postsCount }}>
  document.addEventListener("keydown", (event) => {
    if (event.key === "ArrowRight") {
      window.location.href = `/${next}`;
    } else if (event.key === "ArrowLeft") {
      window.location.href = `/${previous}`;
    }
  });
  document.getElementById("random-btn").addEventListener("click", (event) => {
    event.preventDefault();
    const randomSlug = Math.floor(Math.random() * postsCount) + 1;
    window.location.href = `/${randomSlug}`;
  });
</script>

<style is:global>
  #post-content ul,
  #post-content ol,
  #post-content li {
    text-align: left;
  }
</style>

<style>
  body,
  html {
    margin: 0;
    padding: 0;
    height: 100%;
    width: 100%;
    font-family: "Segoe UI", Roboto, sans-serif;
  }

  .page-container {
    position: relative;
    min-height: 100vh;
    overflow: hidden;
    background: linear-gradient(160deg, #a8dadc, #457b9d, #1d3557);
    opacity: 0.6;
    display: flex;
    align-items: flex-start;
    justify-content: center;
    text-align: center;
  }

  .button-blue {
    margin-right: 1rem;
  }

  .content {
    position: relative;
    z-index: 1;
    color: #f1faee;
    max-width: 800px;
    line-height: 1.4;
    font-size: 2rem;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    opacity: 0.9;
    display: flex;
    flex-direction: column;
    min-height: 60vh;
    align-items: stretch;
    justify-content: flex-start;
    padding-top: 1rem;
    padding-left: 1rem;
    padding-right: 1rem;
    margin-bottom: 100px;
  }

  #post-content {
    flex: 1;
    padding-left: 0;
    text-align: center;
  }

  .button-row {
    position: fixed;
    left: 0;
    bottom: 0;
    width: 100vw;
    background: rgba(29, 53, 87, 0.85);
    padding: 1rem 0 1.2rem 0;
    margin: 0;
    z-index: 10;
    box-shadow: 0 -2px 12px rgba(0, 0, 0, 0.12);
    border-radius: 0;
  }

  #background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    filter: blur(100px);
  }

  .button-blue {
    display: inline-block;
    background-color: #8ba1ba;
    color: white;
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
    font-weight: 500;
    border: none;
    border-radius: 9999px;
    cursor: pointer;
    transition:
      background-color 0.3s ease,
      transform 0.1s ease;
    text-align: center;
    text-decoration: none;
  }

  .button-blue:hover {
    background-color: #2563eb;
  }

  .button-blue:active {
    transform: scale(0.98);
  }

  .button-blue:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.4);
  }

  @media (max-width: 600px) {
    .content {
      font-size: 1.5rem;
    }
    .button-row {
      position: fixed;
      left: 0;
      bottom: 0;
      width: 100vw;
      background: rgba(29, 53, 87, 0.85);
      padding: 1rem 0 1.2rem 0;
      margin: 0;
      z-index: 10;
      box-shadow: 0 -2px 12px rgba(0, 0, 0, 0.12);
      border-radius: 0;
    }
  }
</style>
